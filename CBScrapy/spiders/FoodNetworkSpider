from scrapy.contrib.spiders import BaseSpider
from scrapy.selector import Selector

from CBScrapy.items import FoodItem

import re

class FoodNetworkSpider(BaseSpider)
    name = 'Food Network Recipe Extractor'
    allowed_domains = ['foodnetwork.com']
    start_urls = ['http://www.foodnetwork.com/search/delegate.do?fnSearchType=recipe']
    
    recipe_pattern = re.compile(/recipes/[\s-]*-recipe/index.html')
    
    def parse(self, response):
        sel = Selector(response)

        for url in sel.xpath('//a/@href').extract():
          if (recipe_pattern.match(url.xpath('/text')):
            yield Request(url, callback=self.parse_recipe)
            
        for search_Page in sel.xpath(//a[@class="nextprev"]):
          if search_Page.xpath('/text').extract() is 'Next &raquo;':
            yield Request(search_Page('@href').extract(), callback=self.parse_recipe)
            return
            
          
            
        

    def parse_recipe(self, response):

        sel = Selector(response)
        item = FoodItem()
        
        #Title
        item['Title'] = sel.xpath('//title/text').extract()
        
        #Timing information
        item['TotalTime'] = sel.xpath('//meta[@itemprop="totalTime"]/text').extract()
        item['PrepTime'] = sel.xpath('//meta[@itemprop="prepTime"]/text').extract()
        item['CookTime'] = sel.xpath('//meta[@itemprop="cookTime"]/text').extract()
        
        #Ingredients
        for ingredient in sel.xpath('//li[@itemprop="ingredients"]/text'):
          item['Ingredients'].append(ingredient.extract())
        
        #Directions
        directions = sel.xpath('//div[@itemprop="recipeInstructions"]')
        for direction in directions.xpath('p/text'):
          item['Directions'].append(direction.extract())
          
        return item
